{"ast":null,"code":"var _jsxFileName = \"/Users/aiyongtech5/Desktop/demo03/demo/src/pages/productList/index.js\";\nimport React from 'react'; //connect是一个方法，该方法返回一个高阶组件，通过这个方法可以将我们写的组件和redux store连接起来，返回一个连接后的容器组件\n\nimport { connect } from 'react-redux'; //引入actions\n\nimport { getDataList } from '@/actions';\n\nclass ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentWillMount() {\n    this.props.getDataList();\n  }\n\n  render() {\n    const {\n      getDataList\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    });\n  }\n\n} //mapStatetoProps返回值：可以将state中的数据映射到组件的props中\n\n\nconst mapStatetoProps = state => {\n  return {\n    product: state.product\n  };\n}; //mapDispatchToProps：可以将action映射到props中(此时的action已经具备了dispatch的功能，无需再通过store.dispatch()来触发)\n\n\nconst mapDispatchToProps = {\n  getDataList\n}; //使用connect方法将props映射到App组件的props中，并且返回一个已经连接react-redux的容器组件\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["/Users/aiyongtech5/Desktop/demo03/demo/src/pages/productList/index.js"],"names":["React","connect","getDataList","ProductList","Component","constructor","props","componentWillMount","render","mapStatetoProps","state","product","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKD,KAAL,CAAWJ,WAAX;AACH;;AACDM,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEN,MAAAA;AAAF,QAAkB,KAAKI,KAA7B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH;;AAboC,C,CAiBzC;;;AACA,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC;AADV,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMC,kBAAkB,GAAG;AACzBV,EAAAA;AADyB,CAA3B,C,CAIA;;AACA,eAAeD,OAAO,CAACQ,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CT,WAA7C,CAAf","sourcesContent":["import React from 'react';\n//connect是一个方法，该方法返回一个高阶组件，通过这个方法可以将我们写的组件和redux store连接起来，返回一个连接后的容器组件\nimport { connect } from 'react-redux';\n//引入actions\nimport { getDataList } from '@/actions'\n\nclass ProductList extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    componentWillMount(){\n        this.props.getDataList()\n    }\n    render(){\n        const { getDataList } = this.props;\n        return(\n            <div>\n            </div>\n        )\n    }\n}\n\n\n//mapStatetoProps返回值：可以将state中的数据映射到组件的props中\nconst mapStatetoProps = state => {\n  return {\n    product: state.product\n  }\n  \n}\n\n//mapDispatchToProps：可以将action映射到props中(此时的action已经具备了dispatch的功能，无需再通过store.dispatch()来触发)\nconst mapDispatchToProps = {\n  getDataList\n}\n\n//使用connect方法将props映射到App组件的props中，并且返回一个已经连接react-redux的容器组件\nexport default connect(mapStatetoProps, mapDispatchToProps)(ProductList);\n"]},"metadata":{},"sourceType":"module"}
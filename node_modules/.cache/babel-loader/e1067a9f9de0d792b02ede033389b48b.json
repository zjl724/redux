{"ast":null,"code":"var _jsxFileName = \"/Users/aiyongtech5/Desktop/demo03/demo/src/pages/productList/index.js\";\nimport React from 'react'; //connect是一个方法，该方法返回一个高阶组件，通过这个方法可以将我们写的组件和redux store连接起来，返回一个连接后的容器组件\n\nimport { connect } from 'react-redux'; //引入actions\n\nimport { add, minus, getDataList } from '@/actions';\n\nfunction ProductList(props) {\n  const {\n    count,\n    city,\n    add,\n    minus,\n    addAsync,\n    chooseCity\n  } = props;\n  console.log(city[0].name);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, \"App\\u7EC4\\u4EF6\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"\\u5F53\\u524D\\u6570\\u91CF:\", count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => add(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"\\u70B9\\u6211\\u52A0\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => minus(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"\\u70B9\\u6211\\u51CF\"));\n} //mapStatetoProps返回值：可以将state中的数据映射到组件的props中\n\n\nconst mapStatetoProps = state => {\n  return {\n    count: state.count,\n    city: state.city,\n    product: state.product\n  };\n}; //mapDispatchToProps：可以将action映射到props中(此时的action已经具备了dispatch的功能，无需再通过store.dispatch()来触发)\n\n\nconst mapDispatchToProps = {\n  add,\n  minus,\n  getDataList\n}; //使用connect方法将props映射到App组件的props中，并且返回一个已经连接react-redux的容器组件\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["/Users/aiyongtech5/Desktop/demo03/demo/src/pages/productList/index.js"],"names":["React","connect","add","minus","getDataList","ProductList","props","count","city","addAsync","chooseCity","console","log","name","mapStatetoProps","state","product","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,GAAT,EAAcC,KAAd,EAAoBC,WAApB,QAAuC,WAAvC;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeN,IAAAA,GAAf;AAAoBC,IAAAA,KAApB;AAA2BM,IAAAA,QAA3B;AAAqCC,IAAAA;AAArC,MAAoDJ,KAA1D;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,IAApB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAASN,KAAT,CAFF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAML,GAAG,CAAC,CAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALF,eAME;AAAQ,IAAA,OAAO,EAAE,MAAMC,KAAK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,CADF;AAYD,C,CAGD;;;AACA,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,KAAK,EAAEQ,KAAK,CAACR,KADR;AAELC,IAAAA,IAAI,EAAEO,KAAK,CAACP,IAFP;AAGLQ,IAAAA,OAAO,EAAED,KAAK,CAACC;AAHV,GAAP;AAMD,CAPD,C,CASA;;;AACA,MAAMC,kBAAkB,GAAG;AACzBf,EAAAA,GADyB;AACpBC,EAAAA,KADoB;AACdC,EAAAA;AADc,CAA3B,C,CAIA;;AACA,eAAeH,OAAO,CAACa,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,WAA7C,CAAf","sourcesContent":["import React from 'react';\n//connect是一个方法，该方法返回一个高阶组件，通过这个方法可以将我们写的组件和redux store连接起来，返回一个连接后的容器组件\nimport { connect } from 'react-redux';\n//引入actions\nimport { add, minus,getDataList } from '@/actions'\n\nfunction ProductList(props) {\n  const { count, city, add, minus, addAsync, chooseCity } = props;\n  console.log(city[0].name) \n  return (\n    <div className=\"App\">\n      App组件\n      <p>当前数量:{count}</p>\n      {/* <p>当前城市:{city}</p> */}\n\n      <button onClick={() => add(3)}>点我加</button>\n      <button onClick={() => minus()}>点我减</button>\n      {/* <button onClick={() => addAsync()}>点我异步加1</button> */}\n      {/* <button onClick={() => chooseCity(\"苏州\")}>修改城市</button> */}\n    </div>\n  );\n}\n\n\n//mapStatetoProps返回值：可以将state中的数据映射到组件的props中\nconst mapStatetoProps = state => {\n  return {\n    count: state.count,\n    city: state.city,\n    product: state.product\n  }\n  \n}\n\n//mapDispatchToProps：可以将action映射到props中(此时的action已经具备了dispatch的功能，无需再通过store.dispatch()来触发)\nconst mapDispatchToProps = {\n  add, minus,getDataList\n}\n\n//使用connect方法将props映射到App组件的props中，并且返回一个已经连接react-redux的容器组件\nexport default connect(mapStatetoProps, mapDispatchToProps)(ProductList);\n"]},"metadata":{},"sourceType":"module"}
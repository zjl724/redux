{"ast":null,"code":"var _jsxFileName = \"/Users/aiyongtech5/Desktop/demo03/demo/src/pages/productList/index.js\";\nimport React from 'react'; //connect是一个方法，该方法返回一个高阶组件，通过这个方法可以将我们写的组件和redux store连接起来，返回一个连接后的容器组件\n\nimport { connect } from 'react-redux'; //引入actions\n\nimport { add, minus, getDataList } from '@/actions';\n\nclass ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      count,\n      city,\n      add,\n      minus,\n      getDataList,\n      addAsync,\n      chooseCity\n    } = this.props;\n    console.log(city[0].name);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, \"App\\u7EC4\\u4EF6\", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, \"\\u5F53\\u524D\\u6570\\u91CF:\", count), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => add(3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, \"\\u70B9\\u6211\\u52A0\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => minus(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"\\u70B9\\u6211\\u51CF\"));\n  }\n\n} //mapStatetoProps返回值：可以将state中的数据映射到组件的props中\n\n\nconst mapStatetoProps = state => {\n  return {\n    count: state.count,\n    city: state.city,\n    product: state.product\n  };\n}; //mapDispatchToProps：可以将action映射到props中(此时的action已经具备了dispatch的功能，无需再通过store.dispatch()来触发)\n\n\nconst mapDispatchToProps = {\n  add,\n  minus,\n  getDataList\n}; //使用connect方法将props映射到App组件的props中，并且返回一个已经连接react-redux的容器组件\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["/Users/aiyongtech5/Desktop/demo03/demo/src/pages/productList/index.js"],"names":["React","connect","add","minus","getDataList","ProductList","Component","constructor","props","render","count","city","addAsync","chooseCity","console","log","name","mapStatetoProps","state","product","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,GAAT,EAAcC,KAAd,EAAoBC,WAApB,QAAuC,WAAvC;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeT,MAAAA,GAAf;AAAoBC,MAAAA,KAApB;AAA2BC,MAAAA,WAA3B;AAAuCQ,MAAAA,QAAvC;AAAiDC,MAAAA;AAAjD,QAAgE,KAAKL,KAA3E;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,IAApB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAASN,KAAT,CAFJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAMR,GAAG,CAAC,CAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAMC,KAAK,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BANJ,CADJ;AAYH;;AAnBoC,C,CAuBzC;;;AACA,MAAMc,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,KAAK,EAAEQ,KAAK,CAACR,KADR;AAELC,IAAAA,IAAI,EAAEO,KAAK,CAACP,IAFP;AAGLQ,IAAAA,OAAO,EAAED,KAAK,CAACC;AAHV,GAAP;AAMD,CAPD,C,CASA;;;AACA,MAAMC,kBAAkB,GAAG;AACzBlB,EAAAA,GADyB;AACpBC,EAAAA,KADoB;AACdC,EAAAA;AADc,CAA3B,C,CAIA;;AACA,eAAeH,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,WAA7C,CAAf","sourcesContent":["import React from 'react';\n//connect是一个方法，该方法返回一个高阶组件，通过这个方法可以将我们写的组件和redux store连接起来，返回一个连接后的容器组件\nimport { connect } from 'react-redux';\n//引入actions\nimport { add, minus,getDataList } from '@/actions'\n\nclass ProductList extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    render(){\n        const { count, city, add, minus, getDataList,addAsync, chooseCity } = this.props;\n        console.log(city[0].name) \n        return(\n            <div>\n            App组件\n                <p>当前数量:{count}</p>\n                {/* <p>当前城市:{city}</p> */}\n\n                <button onClick={() => add(3)}>点我加</button>\n                <button onClick={() => minus()}>点我减</button>\n                {/* <button onClick={() => addAsync()}>点我异步加1</button> */}\n                {/* <button onClick={() => chooseCity(\"苏州\")}>修改城市</button> */}\n            </div>\n        )\n    }\n}\n\n\n//mapStatetoProps返回值：可以将state中的数据映射到组件的props中\nconst mapStatetoProps = state => {\n  return {\n    count: state.count,\n    city: state.city,\n    product: state.product\n  }\n  \n}\n\n//mapDispatchToProps：可以将action映射到props中(此时的action已经具备了dispatch的功能，无需再通过store.dispatch()来触发)\nconst mapDispatchToProps = {\n  add, minus,getDataList\n}\n\n//使用connect方法将props映射到App组件的props中，并且返回一个已经连接react-redux的容器组件\nexport default connect(mapStatetoProps, mapDispatchToProps)(ProductList);\n"]},"metadata":{},"sourceType":"module"}
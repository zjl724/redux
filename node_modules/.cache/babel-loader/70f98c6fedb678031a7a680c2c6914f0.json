{"ast":null,"code":"var _jsxFileName = \"/Users/aiyongtech5/Desktop/demo03/demo/src/pages/productList/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Input } from 'antd';\nimport SearchProduct from \"./search\";\nimport PageNumber from \"./pageNumber\";\nimport List from './list'; //引入actions\n\nimport { getDataList } from '@/actions';\n\nclass ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n  } // componentWillMount(){\n  //     this.props.getDataList()\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }));\n  }\n\n} //mapStatetoProps返回值：可以将state中的数据映射到组件的props中\n\n\nconst mapStatetoProps = state => {\n  return {\n    product: state.product\n  };\n}; //mapDispatchToProps：可以将action映射到props中(此时的action已经具备了dispatch的功能，无需再通过store.dispatch()来触发)\n\n\nconst mapDispatchToProps = {\n  getDataList\n}; //使用connect方法将props映射到App组件的props中，并且返回一个已经连接react-redux的容器组件\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["/Users/aiyongtech5/Desktop/demo03/demo/src/pages/productList/index.js"],"names":["React","connect","Modal","Input","SearchProduct","PageNumber","List","getDataList","ProductList","Component","constructor","props","render","mapStatetoProps","state","product","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,OAAOC,aAAP,MAA0B,UAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,WAAN,SAA0BR,KAAK,CAACS,SAAhC,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACH,GAHoC,CAIrC;AACA;AACA;;;AACAC,EAAAA,MAAM,GAAE;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAcD;;AAtBoC,C,CA0BzC;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC;AADV,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMC,kBAAkB,GAAG;AACzBT,EAAAA;AADyB,CAA3B,C,CAIA;;AACA,eAAeN,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,WAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Modal,Input } from 'antd';\nimport SearchProduct from \"./search\";\nimport PageNumber from \"./pageNumber\";\nimport List from './list'\n//引入actions\nimport { getDataList } from '@/actions'\n\nclass ProductList extends React.Component{\n    constructor(props){\n        super(props)\n    }\n    // componentWillMount(){\n    //     this.props.getDataList()\n    // }\n    render(){\n      return(\n          <div>\n              {/*搜索 */}\n              {/* <SearchProduct></SearchProduct> */}\n              {/*列表 */}\n              <List></List>\n              {/*分页 */}\n              {/* <PageNumber></PageNumber> */}\n              {/*修改商品价格的弹框 */}\n              {/* <Modal title=\"修改商品的价格\" visible={this.state.visible} onOk={()=>this.handleOk(currentId)} onCancel={this.handleCancel}>\n                <Input value={currentPrice} onChange={this.inputChange}/>\n              </Modal> */}\n          </div>\n      )\n    }\n}\n\n\n//mapStatetoProps返回值：可以将state中的数据映射到组件的props中\nconst mapStatetoProps = state => {\n  return {\n    product: state.product\n  }\n  \n}\n\n//mapDispatchToProps：可以将action映射到props中(此时的action已经具备了dispatch的功能，无需再通过store.dispatch()来触发)\nconst mapDispatchToProps = {\n  getDataList\n}\n\n//使用connect方法将props映射到App组件的props中，并且返回一个已经连接react-redux的容器组件\nexport default connect(mapStatetoProps, mapDispatchToProps)(ProductList);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nconst SET_DATA_LIST = \"SETDATALIST\";\nexport function setDataList(list) {\n  return {\n    type: SET_DATA_LIST,\n    list\n  };\n}\nexport function getDataList() {\n  return (dispatch, getState) => {\n    let result = axios.get('productList.json');\n    result.then(res => {\n      const {\n        data\n      } = res;\n      const {\n        pageSize,\n        current\n      } = getState().product;\n      const total = Math.ceil(data.length / pageSize);\n      const currentList = data.slice((current - 1) * pageSize, current * pageSize);\n      dispatch(setDataList(data, total, currentList));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/aiyongtech5/Desktop/demo03/demo/src/actions/index.js"],"names":["axios","SET_DATA_LIST","setDataList","list","type","getDataList","dispatch","getState","result","get","then","res","data","pageSize","current","product","total","Math","ceil","length","currentList","slice"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG,aAAtB;AAEA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AAC7B,SAAM;AACFC,IAAAA,IAAI,EAAEH,aADJ;AAEFE,IAAAA;AAFE,GAAN;AAIH;AAED,OAAO,SAASE,WAAT,GAAuB;AAC1B,SAAO,CAACC,QAAD,EAAUC,QAAV,KAAsB;AACzB,QAAIC,MAAM,GAAGR,KAAK,CAACS,GAAN,CAAU,kBAAV,CAAb;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAYC,GAAG,IAAI;AACf,YAAM;AAACC,QAAAA;AAAD,UAASD,GAAf;AACA,YAAM;AAACE,QAAAA,QAAD;AAAUC,QAAAA;AAAV,UAAqBP,QAAQ,GAAGQ,OAAtC;AACA,YAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUN,IAAI,CAACO,MAAL,GAAcN,QAAxB,CAAd;AACA,YAAMO,WAAW,GAAGR,IAAI,CAACS,KAAL,CAAW,CAACP,OAAO,GAAC,CAAT,IAAYD,QAAvB,EAAgCC,OAAO,GAACD,QAAxC,CAApB;AACAP,MAAAA,QAAQ,CAACJ,WAAW,CAACU,IAAD,EAAMI,KAAN,EAAYI,WAAZ,CAAZ,CAAR;AACH,KAND;AAOH,GATD;AAUH","sourcesContent":["import axios from 'axios';\r\n\r\nconst SET_DATA_LIST = \"SETDATALIST\"\r\n\r\nexport function setDataList(list){\r\n    return{\r\n        type: SET_DATA_LIST,\r\n        list\r\n    }\r\n}\r\n\r\nexport function getDataList() {\r\n    return (dispatch,getState) =>{\r\n        let result = axios.get('productList.json')\r\n        result.then(res => {\r\n            const {data} = res\r\n            const {pageSize,current} = getState().product\r\n            const total = Math.ceil(data.length / pageSize)\r\n            const currentList = data.slice((current-1)*pageSize,current*pageSize)\r\n            dispatch(setDataList(data,total,currentList))\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}